name: Cleanup Images

on:
  # https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#workflow_call
  workflow_call:
    inputs:
      org:
        required: true
        type: string
      repo:
        required: true
        type: string
      image:
        required: true
        type: string
      pr:
        required: true
        type: number
    secrets:
      ghcr_token:
        required: true


jobs:
  get-pr-image:
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.pr_image.outputs.id }}
    steps:
      - name: Get Image Ids
        id: get_images
        # https://github.com/octokit/request-action
        uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: ${{ secrets.ghcr_token }}
        with:
          org: ${{ inputs.org }}
          repo: ${{ inputs.repo }}
          image: ${{ inputs.image }}
          # https://docs.github.com/en/rest/reference/packages#get-all-package-versions-for-a-package-owned-by-an-organization
          route: GET /orgs/{org}/packages/container/{repo}%2F{image}/versions
      - name: Get PR Image
        id: pr_image
        shell: bash
        run: |
          set -euox pipefail
          data=$(echo -e ${{ toJSON(steps.get_images.outputs.data) }})
          id=$(echo "${data}" | jq -c "[.[] | select(.metadata.container.tags[] | contains(\"pr-${{ inputs.pr }}\")) | .id]")
          echo "::set-output name=id::${id}"

  delete-image:
    runs-on: ubuntu-latest
    needs: get-pr-image
    if: ${{ needs.get-pr-image.outputs.id != '' }}
    strategy:
      matrix:
        id: ${{ fromJSON(needs.get-pr-image.outputs.id) }}
    steps:
      - name: Delete Image
        # https://github.com/octokit/request-action
        uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: ${{ secrets.ghcr_token }}
        with:
          org: ${{ inputs.org }}
          repo: ${{ inputs.repo }}
          image: ${{ inputs.image }}
          version: ${{ matrix.id }}
          # https://docs.github.com/en/rest/reference/packages#delete-package-version-for-an-organization
          route: DELETE /orgs/{org}/packages/container/{repo}%2F{image}/versions/{version}
