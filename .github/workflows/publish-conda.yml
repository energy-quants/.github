name: publish/conda

# https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#workflow_call
on:
  workflow_call:
    secrets:
      token:
        required: true
    inputs:
      micromamba-version:
        type: string
        description: 'The `micromamba` version to use.'
        required: false
        default: '1.5.1-0'
      python-version:
        type: string
        description: 'The Python version to use.'
        required: false
        default: '=3.11'
      devtools-version:
        type: string
        description: 'The `eq-devtools` version to use.'
        required: false
        default: '>=0.6.0'


jobs:
  debug:
    name: Show Debug Info
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - id: show_debug_info
        name: Show Debug Info
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          # Show Debug Info
          echo "::group::User Info"
          id
          echo "::endgroup::"
          echo "::group::GitHub Context"
          echo "${GITHUB_CONTEXT}"
          echo "::endgroup::"
          echo "::group::Environment Variables"
          unset GITHUB_CONTEXT
          env | sort
          echo "::endgroup::"
          echo "::group::Git Info"
          which git
          git --version
          echo "::endgroup::"

  on_requested:
    name: Set Pending Status
    if: github.event.action == 'requested'
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - id: set_status
        name: Set Status
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euox pipefail
          # https://docs.github.com/en/rest/commits/statuses?apiVersion=2022-11-28#create-a-commit-status
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/statuses/${{ github.event.workflow_run.head_commit.id }} \
            -f state='pending' \
            -f context='publish/conda'

  on_failure:
    name: Set Failed Status
    if: github.event.action == 'completed' && github.event.workflow_run.conclusion == 'failure'
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - id: set_status
        name: Set Status
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euox pipefail
          # https://docs.github.com/en/rest/commits/statuses?apiVersion=2022-11-28#create-a-commit-status
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/statuses/${{ github.event.workflow_run.head_commit.id }} \
            -f state='failure' \
            -f context='publish/conda'

  publish_package:
    name: Publish Conda Package
    if: github.event.action == 'completed' && github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - id: set_pending_status
        name: Set Status
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euox pipefail
          # https://docs.github.com/en/rest/commits/statuses?apiVersion=2022-11-28#create-a-commit-status
          url=$(gh run  list --repo='${{ github.repository }}' --workflow='publish/conda' --limit 1 --json 'url' --jq '.[].url')
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/statuses/${{ github.event.workflow_run.head_commit.id }} \
            -f state='pending' \
            -f target_url="${url}" \
            -f context='publish/conda'
      - id: setup_micromamba
        name: Create Python Environment
        # https://github.com/mamba-org/setup-micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: ${{ inputs.micromamba-version }}
          cache-environment: true
          condarc: |
            channels:
              - conda-forge
              - energy-quants
          environment-name: build
          create-args: >-
            python${{ inputs.python-version }}
            eq-devtools${{ inputs.devtools-version }}

      - id: download_artifact
        name: Download Artifact
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh run download ${{ github.event.workflow_run.id }} -n conda-channel --repo $GITHUB_REPOSITORY --dir conda-local
          tree conda-local

      - id: publish_package
        name: Publish Package
        shell: bash -l {0}
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        run: |
          set -euox pipefail
          devtool --version
          tree ./conda-local
          if [[ "${{ github.event.workflow_run.event }}" == 'pull_request' ]]; then
            owner="${{ github.event.workflow_run.head_repository.owner.login }}"
            branch="${{ github.event.workflow_run.head_branch }}"
            pr_number=$(
              gh pr \
                --repo='${{ github.repository }}' \
                --json 'number' \
                --jq '.number' \
                view \
                "${owner}:${branch}"
            )
            tag="pr-${pr_number}"
          else
            tag='latest'
          fi
          for filepath in  $(find "./conda-local" -type f -name "*.conda"); do
            devtool conda publish --owner='energy-quants' --filepath="${filepath}"
            devtool conda publish --owner='energy-quants' --tag="${tag}" --filepath="${filepath}"
          done
      - id: set_final_status
        name: Set Final Status
        if: always()
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # https://docs.github.com/en/rest/commits/statuses?apiVersion=2022-11-28#create-a-commit-status
          url=$(gh run  list --repo='${{ github.repository }}' --workflow='publish/conda' --limit 1 --json 'url' --jq '.[].url')
          if [[ ${{ github.event.workflow_run.conclusion }} == "success" ]]; then
            state=${{ job.status }}
          else
            state="failure"
          fi
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/statuses/${{ github.event.workflow_run.head_commit.id }} \
            -f state="${state}" \
            -f target_url="${url}" \
            -f context='publish/conda'
